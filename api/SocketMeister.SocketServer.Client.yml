### YamlMime:ManagedReference
items:
- uid: SocketMeister.SocketServer.Client
  commentId: T:SocketMeister.SocketServer.Client
  id: SocketServer.Client
  parent: SocketMeister
  children:
  - SocketMeister.SocketServer.Client.ClientId
  - SocketMeister.SocketServer.Client.ClientSocketMeisterVersion
  - SocketMeister.SocketServer.Client.ConnectTimestamp
  - SocketMeister.SocketServer.Client.Dispose
  - SocketMeister.SocketServer.Client.DoesSubscriptionExist(System.String)
  - SocketMeister.SocketServer.Client.Finalize
  - SocketMeister.SocketServer.Client.FriendlyName
  - SocketMeister.SocketServer.Client.GetSubscriptions
  - SocketMeister.SocketServer.Client.SendMessage(System.Object[],System.Int32,System.Boolean)
  - SocketMeister.SocketServer.Client.SubscriptionCount
  langs:
  - csharp
  - vb
  name: SocketServer.Client
  nameWithType: SocketServer.Client
  fullName: SocketMeister.SocketServer.Client
  type: Class
  source:
    remote:
      path: src/SocketMeisterAPI/SocketServer.Client.cs
      branch: main
      repo: https://github.com/SeanFellowes/SocketMeister
    id: Client
    path: src/SocketMeisterAPI/SocketServer.Client.cs
    startLine: 18
  assemblies:
  - SocketMeister
  namespace: SocketMeister
  summary: Represents a remote client that has connected to the socket server.
  example: []
  syntax:
    content: 'public class SocketServer.Client : IDisposable'
    content.vb: Public Class SocketServer.Client Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: SocketMeister.SocketServer.Client.Dispose
  commentId: M:SocketMeister.SocketServer.Client.Dispose
  id: Dispose
  parent: SocketMeister.SocketServer.Client
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SocketServer.Client.Dispose()
  fullName: SocketMeister.SocketServer.Client.Dispose()
  type: Method
  source:
    remote:
      path: src/SocketMeisterAPI/SocketServer.Client.cs
      branch: main
      repo: https://github.com/SeanFellowes/SocketMeister
    id: Dispose
    path: src/SocketMeisterAPI/SocketServer.Client.cs
    startLine: 47
  assemblies:
  - SocketMeister
  namespace: SocketMeister
  summary: Disposes of the resources used by the class.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: SocketMeister.SocketServer.Client.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: SocketMeister.SocketServer.Client.Finalize
  commentId: M:SocketMeister.SocketServer.Client.Finalize
  id: Finalize
  parent: SocketMeister.SocketServer.Client
  langs:
  - csharp
  - vb
  name: ~Client()
  nameWithType: SocketServer.Client.~Client()
  fullName: SocketMeister.SocketServer.Client.~Client()
  type: Method
  source:
    remote:
      path: src/SocketMeisterAPI/SocketServer.Client.cs
      branch: main
      repo: https://github.com/SeanFellowes/SocketMeister
    id: Finalize
    path: src/SocketMeisterAPI/SocketServer.Client.cs
    startLine: 71
  assemblies:
  - SocketMeister
  namespace: SocketMeister
  summary: Finalizer to ensure resources are released.
  example: []
  syntax:
    content: protected ~Client()
    content.vb: 'Protected '
  overload: SocketMeister.SocketServer.Client.Finalize*
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: SocketMeister.SocketServer.Client.ClientId
  commentId: P:SocketMeister.SocketServer.Client.ClientId
  id: ClientId
  parent: SocketMeister.SocketServer.Client
  langs:
  - csharp
  - vb
  name: ClientId
  nameWithType: SocketServer.Client.ClientId
  fullName: SocketMeister.SocketServer.Client.ClientId
  type: Property
  source:
    remote:
      path: src/SocketMeisterAPI/SocketServer.Client.cs
      branch: main
      repo: https://github.com/SeanFellowes/SocketMeister
    id: ClientId
    path: src/SocketMeisterAPI/SocketServer.Client.cs
    startLine: 79
  assemblies:
  - SocketMeister
  namespace: SocketMeister
  summary: Gets the GUID assigned to the client by the server when it connects.
  example: []
  syntax:
    content: public string ClientId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ClientId As String
  overload: SocketMeister.SocketServer.Client.ClientId*
- uid: SocketMeister.SocketServer.Client.ClientSocketMeisterVersion
  commentId: P:SocketMeister.SocketServer.Client.ClientSocketMeisterVersion
  id: ClientSocketMeisterVersion
  parent: SocketMeister.SocketServer.Client
  langs:
  - csharp
  - vb
  name: ClientSocketMeisterVersion
  nameWithType: SocketServer.Client.ClientSocketMeisterVersion
  fullName: SocketMeister.SocketServer.Client.ClientSocketMeisterVersion
  type: Property
  source:
    remote:
      path: src/SocketMeisterAPI/SocketServer.Client.cs
      branch: main
      repo: https://github.com/SeanFellowes/SocketMeister
    id: ClientSocketMeisterVersion
    path: src/SocketMeisterAPI/SocketServer.Client.cs
    startLine: 89
  assemblies:
  - SocketMeister
  namespace: SocketMeister
  summary: Gets or sets the version of SocketMeister used by the client.
  example: []
  syntax:
    content: public int ClientSocketMeisterVersion { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ClientSocketMeisterVersion As Integer
  overload: SocketMeister.SocketServer.Client.ClientSocketMeisterVersion*
- uid: SocketMeister.SocketServer.Client.ConnectTimestamp
  commentId: P:SocketMeister.SocketServer.Client.ConnectTimestamp
  id: ConnectTimestamp
  parent: SocketMeister.SocketServer.Client
  langs:
  - csharp
  - vb
  name: ConnectTimestamp
  nameWithType: SocketServer.Client.ConnectTimestamp
  fullName: SocketMeister.SocketServer.Client.ConnectTimestamp
  type: Property
  source:
    remote:
      path: src/SocketMeisterAPI/SocketServer.Client.cs
      branch: main
      repo: https://github.com/SeanFellowes/SocketMeister
    id: ConnectTimestamp
    path: src/SocketMeisterAPI/SocketServer.Client.cs
    startLine: 98
  assemblies:
  - SocketMeister
  namespace: SocketMeister
  summary: Gets the date and time when the client connected.
  example: []
  syntax:
    content: public DateTime ConnectTimestamp { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public ReadOnly Property ConnectTimestamp As Date
  overload: SocketMeister.SocketServer.Client.ConnectTimestamp*
- uid: SocketMeister.SocketServer.Client.FriendlyName
  commentId: P:SocketMeister.SocketServer.Client.FriendlyName
  id: FriendlyName
  parent: SocketMeister.SocketServer.Client
  langs:
  - csharp
  - vb
  name: FriendlyName
  nameWithType: SocketServer.Client.FriendlyName
  fullName: SocketMeister.SocketServer.Client.FriendlyName
  type: Property
  source:
    remote:
      path: src/SocketMeisterAPI/SocketServer.Client.cs
      branch: main
      repo: https://github.com/SeanFellowes/SocketMeister
    id: FriendlyName
    path: src/SocketMeisterAPI/SocketServer.Client.cs
    startLine: 103
  assemblies:
  - SocketMeister
  namespace: SocketMeister
  summary: Gets or sets a friendly name for the client. This can be used to help identify the client in logs and error handling.
  example: []
  syntax:
    content: public string FriendlyName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FriendlyName As String
  overload: SocketMeister.SocketServer.Client.FriendlyName*
- uid: SocketMeister.SocketServer.Client.SubscriptionCount
  commentId: P:SocketMeister.SocketServer.Client.SubscriptionCount
  id: SubscriptionCount
  parent: SocketMeister.SocketServer.Client
  langs:
  - csharp
  - vb
  name: SubscriptionCount
  nameWithType: SocketServer.Client.SubscriptionCount
  fullName: SocketMeister.SocketServer.Client.SubscriptionCount
  type: Property
  source:
    remote:
      path: src/SocketMeisterAPI/SocketServer.Client.cs
      branch: main
      repo: https://github.com/SeanFellowes/SocketMeister
    id: SubscriptionCount
    path: src/SocketMeisterAPI/SocketServer.Client.cs
    startLine: 122
  assemblies:
  - SocketMeister
  namespace: SocketMeister
  summary: Gets the number of subscriptions for this client.
  example: []
  syntax:
    content: public int SubscriptionCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property SubscriptionCount As Integer
  overload: SocketMeister.SocketServer.Client.SubscriptionCount*
- uid: SocketMeister.SocketServer.Client.DoesSubscriptionExist(System.String)
  commentId: M:SocketMeister.SocketServer.Client.DoesSubscriptionExist(System.String)
  id: DoesSubscriptionExist(System.String)
  parent: SocketMeister.SocketServer.Client
  langs:
  - csharp
  - vb
  name: DoesSubscriptionExist(string)
  nameWithType: SocketServer.Client.DoesSubscriptionExist(string)
  fullName: SocketMeister.SocketServer.Client.DoesSubscriptionExist(string)
  type: Method
  source:
    remote:
      path: src/SocketMeisterAPI/SocketServer.Client.cs
      branch: main
      repo: https://github.com/SeanFellowes/SocketMeister
    id: DoesSubscriptionExist
    path: src/SocketMeisterAPI/SocketServer.Client.cs
    startLine: 134
  assemblies:
  - SocketMeister
  namespace: SocketMeister
  summary: Checks whether a subscription exists.
  example: []
  syntax:
    content: public bool DoesSubscriptionExist(string subscriptionName)
    parameters:
    - id: subscriptionName
      type: System.String
      description: The name of the subscription (case-insensitive).
    return:
      type: System.Boolean
      description: True if the subscription exists; otherwise, false.
    content.vb: Public Function DoesSubscriptionExist(subscriptionName As String) As Boolean
  overload: SocketMeister.SocketServer.Client.DoesSubscriptionExist*
  nameWithType.vb: SocketServer.Client.DoesSubscriptionExist(String)
  fullName.vb: SocketMeister.SocketServer.Client.DoesSubscriptionExist(String)
  name.vb: DoesSubscriptionExist(String)
- uid: SocketMeister.SocketServer.Client.GetSubscriptions
  commentId: M:SocketMeister.SocketServer.Client.GetSubscriptions
  id: GetSubscriptions
  parent: SocketMeister.SocketServer.Client
  langs:
  - csharp
  - vb
  name: GetSubscriptions()
  nameWithType: SocketServer.Client.GetSubscriptions()
  fullName: SocketMeister.SocketServer.Client.GetSubscriptions()
  type: Method
  source:
    remote:
      path: src/SocketMeisterAPI/SocketServer.Client.cs
      branch: main
      repo: https://github.com/SeanFellowes/SocketMeister
    id: GetSubscriptions
    path: src/SocketMeisterAPI/SocketServer.Client.cs
    startLine: 143
  assemblies:
  - SocketMeister
  namespace: SocketMeister
  summary: Gets a list of subscription names.
  example: []
  syntax:
    content: public List<string> GetSubscriptions()
    return:
      type: System.Collections.Generic.List{System.String}
      description: A list of subscription names.
    content.vb: Public Function GetSubscriptions() As List(Of String)
  overload: SocketMeister.SocketServer.Client.GetSubscriptions*
- uid: SocketMeister.SocketServer.Client.SendMessage(System.Object[],System.Int32,System.Boolean)
  commentId: M:SocketMeister.SocketServer.Client.SendMessage(System.Object[],System.Int32,System.Boolean)
  id: SendMessage(System.Object[],System.Int32,System.Boolean)
  parent: SocketMeister.SocketServer.Client
  langs:
  - csharp
  - vb
  name: SendMessage(object[], int, bool)
  nameWithType: SocketServer.Client.SendMessage(object[], int, bool)
  fullName: SocketMeister.SocketServer.Client.SendMessage(object[], int, bool)
  type: Method
  source:
    remote:
      path: src/SocketMeisterAPI/SocketServer.Client.cs
      branch: main
      repo: https://github.com/SeanFellowes/SocketMeister
    id: SendMessage
    path: src/SocketMeisterAPI/SocketServer.Client.cs
    startLine: 226
  assemblies:
  - SocketMeister
  namespace: SocketMeister
  summary: Sends a message to the client and waits for a response.
  example: []
  syntax:
    content: public byte[] SendMessage(object[] parameters, int timeoutMilliseconds = 60000, bool isLongPolling = false)
    parameters:
    - id: parameters
      type: System.Object[]
      description: An array of parameters to send with the message.
    - id: timeoutMilliseconds
      type: System.Int32
      description: The maximum number of milliseconds to wait for a response from the server.
    - id: isLongPolling
      type: System.Boolean
      description: Indicates whether the message is long-polling on the server. If true, the message will be canceled instantly when a disconnect occurs.
    return:
      type: System.Byte[]
      description: A nullable array of bytes returned from the socket server.
    content.vb: Public Function SendMessage(parameters As Object(), timeoutMilliseconds As Integer = 60000, isLongPolling As Boolean = False) As Byte()
  overload: SocketMeister.SocketServer.Client.SendMessage*
  nameWithType.vb: SocketServer.Client.SendMessage(Object(), Integer, Boolean)
  fullName.vb: SocketMeister.SocketServer.Client.SendMessage(Object(), Integer, Boolean)
  name.vb: SendMessage(Object(), Integer, Boolean)
references:
- uid: SocketMeister
  commentId: N:SocketMeister
  href: SocketMeister.html
  name: SocketMeister
  nameWithType: SocketMeister
  fullName: SocketMeister
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SocketMeister.SocketServer.Client.Dispose*
  commentId: Overload:SocketMeister.SocketServer.Client.Dispose
  href: SocketMeister.SocketServer.Client.html#SocketMeister_SocketServer_Client_Dispose
  name: Dispose
  nameWithType: SocketServer.Client.Dispose
  fullName: SocketMeister.SocketServer.Client.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: SocketMeister.SocketServer.Client.Finalize*
  commentId: Overload:SocketMeister.SocketServer.Client.Finalize
  href: SocketMeister.SocketServer.Client.html#SocketMeister_SocketServer_Client_Finalize
  name: ~Client
  nameWithType: SocketServer.Client.~Client
  fullName: SocketMeister.SocketServer.Client.~Client
  spec.csharp:
  - name: "~"
  - uid: SocketMeister.SocketServer.Client.Finalize*
    name: Client
    href: SocketMeister.SocketServer.Client.html#SocketMeister_SocketServer_Client_Finalize
- uid: SocketMeister.SocketServer.Client.ClientId*
  commentId: Overload:SocketMeister.SocketServer.Client.ClientId
  href: SocketMeister.SocketServer.Client.html#SocketMeister_SocketServer_Client_ClientId
  name: ClientId
  nameWithType: SocketServer.Client.ClientId
  fullName: SocketMeister.SocketServer.Client.ClientId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SocketMeister.SocketServer.Client.ClientSocketMeisterVersion*
  commentId: Overload:SocketMeister.SocketServer.Client.ClientSocketMeisterVersion
  href: SocketMeister.SocketServer.Client.html#SocketMeister_SocketServer_Client_ClientSocketMeisterVersion
  name: ClientSocketMeisterVersion
  nameWithType: SocketServer.Client.ClientSocketMeisterVersion
  fullName: SocketMeister.SocketServer.Client.ClientSocketMeisterVersion
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SocketMeister.SocketServer.Client.ConnectTimestamp*
  commentId: Overload:SocketMeister.SocketServer.Client.ConnectTimestamp
  href: SocketMeister.SocketServer.Client.html#SocketMeister_SocketServer_Client_ConnectTimestamp
  name: ConnectTimestamp
  nameWithType: SocketServer.Client.ConnectTimestamp
  fullName: SocketMeister.SocketServer.Client.ConnectTimestamp
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: SocketMeister.SocketServer.Client.FriendlyName*
  commentId: Overload:SocketMeister.SocketServer.Client.FriendlyName
  href: SocketMeister.SocketServer.Client.html#SocketMeister_SocketServer_Client_FriendlyName
  name: FriendlyName
  nameWithType: SocketServer.Client.FriendlyName
  fullName: SocketMeister.SocketServer.Client.FriendlyName
- uid: SocketMeister.SocketServer.Client.SubscriptionCount*
  commentId: Overload:SocketMeister.SocketServer.Client.SubscriptionCount
  href: SocketMeister.SocketServer.Client.html#SocketMeister_SocketServer_Client_SubscriptionCount
  name: SubscriptionCount
  nameWithType: SocketServer.Client.SubscriptionCount
  fullName: SocketMeister.SocketServer.Client.SubscriptionCount
- uid: SocketMeister.SocketServer.Client.DoesSubscriptionExist*
  commentId: Overload:SocketMeister.SocketServer.Client.DoesSubscriptionExist
  href: SocketMeister.SocketServer.Client.html#SocketMeister_SocketServer_Client_DoesSubscriptionExist_System_String_
  name: DoesSubscriptionExist
  nameWithType: SocketServer.Client.DoesSubscriptionExist
  fullName: SocketMeister.SocketServer.Client.DoesSubscriptionExist
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SocketMeister.SocketServer.Client.GetSubscriptions*
  commentId: Overload:SocketMeister.SocketServer.Client.GetSubscriptions
  href: SocketMeister.SocketServer.Client.html#SocketMeister_SocketServer_Client_GetSubscriptions
  name: GetSubscriptions
  nameWithType: SocketServer.Client.GetSubscriptions
  fullName: SocketMeister.SocketServer.Client.GetSubscriptions
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SocketMeister.SocketServer.Client.SendMessage*
  commentId: Overload:SocketMeister.SocketServer.Client.SendMessage
  href: SocketMeister.SocketServer.Client.html#SocketMeister_SocketServer_Client_SendMessage_System_Object___System_Int32_System_Boolean_
  name: SendMessage
  nameWithType: SocketServer.Client.SendMessage
  fullName: SocketMeister.SocketServer.Client.SendMessage
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
