### YamlMime:ManagedReference
items:
- uid: SocketMeister.SocketEndPoint
  commentId: T:SocketMeister.SocketEndPoint
  id: SocketEndPoint
  parent: SocketMeister
  children:
  - SocketMeister.SocketEndPoint.#ctor(System.String,System.Int32)
  - SocketMeister.SocketEndPoint.Description
  - SocketMeister.SocketEndPoint.Dispose
  - SocketMeister.SocketEndPoint.Dispose(System.Boolean)
  - SocketMeister.SocketEndPoint.IPAddress
  - SocketMeister.SocketEndPoint.Port
  langs:
  - csharp
  - vb
  name: SocketEndPoint
  nameWithType: SocketEndPoint
  fullName: SocketMeister.SocketEndPoint
  type: Class
  source:
    remote:
      path: src/SocketMeisterAPI/SocketEndPoint.cs
      branch: main
      repo: https://github.com/SeanFellowes/SocketMeister
    id: SocketEndPoint
    path: src/SocketMeisterAPI/SocketEndPoint.cs
    startLine: 10
  assemblies:
  - SocketMeister
  namespace: SocketMeister
  summary: Client <xref href="SocketMeister.SocketEndPoint.Socket" data-throw-if-not-resolved="false"></xref> to a SocketServer end point.
  example: []
  syntax:
    content: 'public class SocketEndPoint : IDisposable'
    content.vb: Public Class SocketEndPoint Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: SocketMeister.SocketEndPoint.#ctor(System.String,System.Int32)
  commentId: M:SocketMeister.SocketEndPoint.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: SocketMeister.SocketEndPoint
  langs:
  - csharp
  - vb
  name: SocketEndPoint(string, int)
  nameWithType: SocketEndPoint.SocketEndPoint(string, int)
  fullName: SocketMeister.SocketEndPoint.SocketEndPoint(string, int)
  type: Constructor
  source:
    remote:
      path: src/SocketMeisterAPI/SocketEndPoint.cs
      branch: main
      repo: https://github.com/SeanFellowes/SocketMeister
    id: .ctor
    path: src/SocketMeisterAPI/SocketEndPoint.cs
    startLine: 31
  assemblies:
  - SocketMeister
  namespace: SocketMeister
  summary: Default constructor.
  example: []
  syntax:
    content: public SocketEndPoint(string IPAddress, int Port)
    parameters:
    - id: IPAddress
      type: System.String
      description: IP Address of the server to connect to.
    - id: Port
      type: System.Int32
      description: Port number of the socket listener to connect to.
    content.vb: Public Sub New(IPAddress As String, Port As Integer)
  overload: SocketMeister.SocketEndPoint.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown when <code class="paramref">IPAddress</code> is null, empty, or invalid, or when <code class="paramref">Port</code> is out of range.
  nameWithType.vb: SocketEndPoint.New(String, Integer)
  fullName.vb: SocketMeister.SocketEndPoint.New(String, Integer)
  name.vb: New(String, Integer)
- uid: SocketMeister.SocketEndPoint.Dispose
  commentId: M:SocketMeister.SocketEndPoint.Dispose
  id: Dispose
  parent: SocketMeister.SocketEndPoint
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SocketEndPoint.Dispose()
  fullName: SocketMeister.SocketEndPoint.Dispose()
  type: Method
  source:
    remote:
      path: src/SocketMeisterAPI/SocketEndPoint.cs
      branch: main
      repo: https://github.com/SeanFellowes/SocketMeister
    id: Dispose
    path: src/SocketMeisterAPI/SocketEndPoint.cs
    startLine: 67
  assemblies:
  - SocketMeister
  namespace: SocketMeister
  summary: Dispose of the class
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: SocketMeister.SocketEndPoint.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: SocketMeister.SocketEndPoint.Dispose(System.Boolean)
  commentId: M:SocketMeister.SocketEndPoint.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: SocketMeister.SocketEndPoint
  langs:
  - csharp
  - vb
  name: Dispose(bool)
  nameWithType: SocketEndPoint.Dispose(bool)
  fullName: SocketMeister.SocketEndPoint.Dispose(bool)
  type: Method
  source:
    remote:
      path: src/SocketMeisterAPI/SocketEndPoint.cs
      branch: main
      repo: https://github.com/SeanFellowes/SocketMeister
    id: Dispose
    path: src/SocketMeisterAPI/SocketEndPoint.cs
    startLine: 77
  assemblies:
  - SocketMeister
  namespace: SocketMeister
  summary: Dispose of the class.
  example: []
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: Indicates whether the method is called from <xref href="SocketMeister.SocketEndPoint.Dispose" data-throw-if-not-resolved="false"></xref> or a finalizer.
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: SocketMeister.SocketEndPoint.Dispose*
  nameWithType.vb: SocketEndPoint.Dispose(Boolean)
  fullName.vb: SocketMeister.SocketEndPoint.Dispose(Boolean)
  name.vb: Dispose(Boolean)
- uid: SocketMeister.SocketEndPoint.Description
  commentId: P:SocketMeister.SocketEndPoint.Description
  id: Description
  parent: SocketMeister.SocketEndPoint
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: SocketEndPoint.Description
  fullName: SocketMeister.SocketEndPoint.Description
  type: Property
  source:
    remote:
      path: src/SocketMeisterAPI/SocketEndPoint.cs
      branch: main
      repo: https://github.com/SeanFellowes/SocketMeister
    id: Description
    path: src/SocketMeisterAPI/SocketEndPoint.cs
    startLine: 97
  assemblies:
  - SocketMeister
  namespace: SocketMeister
  summary: Description of the IP Address and Port. For example, 123.123.123.123:5000
  example: []
  syntax:
    content: public string Description { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Description As String
  overload: SocketMeister.SocketEndPoint.Description*
- uid: SocketMeister.SocketEndPoint.IPAddress
  commentId: P:SocketMeister.SocketEndPoint.IPAddress
  id: IPAddress
  parent: SocketMeister.SocketEndPoint
  langs:
  - csharp
  - vb
  name: IPAddress
  nameWithType: SocketEndPoint.IPAddress
  fullName: SocketMeister.SocketEndPoint.IPAddress
  type: Property
  source:
    remote:
      path: src/SocketMeisterAPI/SocketEndPoint.cs
      branch: main
      repo: https://github.com/SeanFellowes/SocketMeister
    id: IPAddress
    path: src/SocketMeisterAPI/SocketEndPoint.cs
    startLine: 115
  assemblies:
  - SocketMeister
  namespace: SocketMeister
  summary: IP Address of the server to connect to
  example: []
  syntax:
    content: public string IPAddress { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property IPAddress As String
  overload: SocketMeister.SocketEndPoint.IPAddress*
- uid: SocketMeister.SocketEndPoint.Port
  commentId: P:SocketMeister.SocketEndPoint.Port
  id: Port
  parent: SocketMeister.SocketEndPoint
  langs:
  - csharp
  - vb
  name: Port
  nameWithType: SocketEndPoint.Port
  fullName: SocketMeister.SocketEndPoint.Port
  type: Property
  source:
    remote:
      path: src/SocketMeisterAPI/SocketEndPoint.cs
      branch: main
      repo: https://github.com/SeanFellowes/SocketMeister
    id: Port
    path: src/SocketMeisterAPI/SocketEndPoint.cs
    startLine: 142
  assemblies:
  - SocketMeister
  namespace: SocketMeister
  summary: Port number of the socket listener to connect to
  example: []
  syntax:
    content: public ushort Port { get; }
    parameters: []
    return:
      type: System.UInt16
    content.vb: Public ReadOnly Property Port As UShort
  overload: SocketMeister.SocketEndPoint.Port*
references:
- uid: SocketMeister.SocketEndPoint.Socket
  commentId: P:SocketMeister.SocketEndPoint.Socket
  name: Socket
  nameWithType: SocketEndPoint.Socket
  fullName: SocketMeister.SocketEndPoint.Socket
- uid: SocketMeister
  commentId: N:SocketMeister
  href: SocketMeister.html
  name: SocketMeister
  nameWithType: SocketMeister
  fullName: SocketMeister
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: SocketMeister.SocketEndPoint.#ctor*
  commentId: Overload:SocketMeister.SocketEndPoint.#ctor
  href: SocketMeister.SocketEndPoint.html#SocketMeister_SocketEndPoint__ctor_System_String_System_Int32_
  name: SocketEndPoint
  nameWithType: SocketEndPoint.SocketEndPoint
  fullName: SocketMeister.SocketEndPoint.SocketEndPoint
  nameWithType.vb: SocketEndPoint.New
  fullName.vb: SocketMeister.SocketEndPoint.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SocketMeister.SocketEndPoint.Dispose*
  commentId: Overload:SocketMeister.SocketEndPoint.Dispose
  href: SocketMeister.SocketEndPoint.html#SocketMeister_SocketEndPoint_Dispose
  name: Dispose
  nameWithType: SocketEndPoint.Dispose
  fullName: SocketMeister.SocketEndPoint.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: SocketMeister.SocketEndPoint.Dispose
  commentId: M:SocketMeister.SocketEndPoint.Dispose
  href: SocketMeister.SocketEndPoint.html#SocketMeister_SocketEndPoint_Dispose
  name: Dispose()
  nameWithType: SocketEndPoint.Dispose()
  fullName: SocketMeister.SocketEndPoint.Dispose()
  spec.csharp:
  - uid: SocketMeister.SocketEndPoint.Dispose
    name: Dispose
    href: SocketMeister.SocketEndPoint.html#SocketMeister_SocketEndPoint_Dispose
  - name: (
  - name: )
  spec.vb:
  - uid: SocketMeister.SocketEndPoint.Dispose
    name: Dispose
    href: SocketMeister.SocketEndPoint.html#SocketMeister_SocketEndPoint_Dispose
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SocketMeister.SocketEndPoint.Description*
  commentId: Overload:SocketMeister.SocketEndPoint.Description
  href: SocketMeister.SocketEndPoint.html#SocketMeister_SocketEndPoint_Description
  name: Description
  nameWithType: SocketEndPoint.Description
  fullName: SocketMeister.SocketEndPoint.Description
- uid: SocketMeister.SocketEndPoint.IPAddress*
  commentId: Overload:SocketMeister.SocketEndPoint.IPAddress
  href: SocketMeister.SocketEndPoint.html#SocketMeister_SocketEndPoint_IPAddress
  name: IPAddress
  nameWithType: SocketEndPoint.IPAddress
  fullName: SocketMeister.SocketEndPoint.IPAddress
- uid: SocketMeister.SocketEndPoint.Port*
  commentId: Overload:SocketMeister.SocketEndPoint.Port
  href: SocketMeister.SocketEndPoint.html#SocketMeister_SocketEndPoint_Port
  name: Port
  nameWithType: SocketEndPoint.Port
  fullName: SocketMeister.SocketEndPoint.Port
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint16
  name: ushort
  nameWithType: ushort
  fullName: ushort
  nameWithType.vb: UShort
  fullName.vb: UShort
  name.vb: UShort
