### YamlMime:ManagedReference
items:
- uid: SocketMeister.LogEntry
  commentId: T:SocketMeister.LogEntry
  id: LogEntry
  parent: SocketMeister
  children:
  - SocketMeister.LogEntry.#ctor(System.Exception)
  - SocketMeister.LogEntry.#ctor(System.Exception,System.Int64)
  - SocketMeister.LogEntry.#ctor(System.String,SocketMeister.Severity,SocketMeister.LogEventType)
  - SocketMeister.LogEntry.#ctor(System.String,SocketMeister.Severity,SocketMeister.LogEventType,System.Int64)
  - SocketMeister.LogEntry.EventType
  - SocketMeister.LogEntry.Exception
  - SocketMeister.LogEntry.Message
  - SocketMeister.LogEntry.MessageId
  - SocketMeister.LogEntry.Severity
  - SocketMeister.LogEntry.Timestamp
  langs:
  - csharp
  - vb
  name: LogEntry
  nameWithType: LogEntry
  fullName: SocketMeister.LogEntry
  type: Class
  source:
    remote:
      path: src/SocketMeister/LogEntry.cs
      branch: main
      repo: https://github.com/SeanFellowes/SocketMeister
    id: LogEntry
    path: src/SocketMeister/LogEntry.cs
    startLine: 8
  assemblies:
  - SocketMeister
  namespace: SocketMeister
  summary: Represents the details of a log entry emitted by the logger.
  example: []
  syntax:
    content: public class LogEntry
    content.vb: Public Class LogEntry
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: SocketMeister.LogEntry.#ctor(System.Exception)
  commentId: M:SocketMeister.LogEntry.#ctor(System.Exception)
  id: '#ctor(System.Exception)'
  parent: SocketMeister.LogEntry
  langs:
  - csharp
  - vb
  name: LogEntry(Exception)
  nameWithType: LogEntry.LogEntry(Exception)
  fullName: SocketMeister.LogEntry.LogEntry(System.Exception)
  type: Constructor
  source:
    remote:
      path: src/SocketMeister/LogEntry.cs
      branch: main
      repo: https://github.com/SeanFellowes/SocketMeister
    id: .ctor
    path: src/SocketMeister/LogEntry.cs
    startLine: 24
  assemblies:
  - SocketMeister
  namespace: SocketMeister
  summary: Initializes a new instance of the <xref href="SocketMeister.LogEntry" data-throw-if-not-resolved="false"></xref> class for an exception.
  example: []
  syntax:
    content: public LogEntry(Exception exception)
    parameters:
    - id: exception
      type: System.Exception
      description: The exception associated with the log entry.
    content.vb: Public Sub New(exception As Exception)
  overload: SocketMeister.LogEntry.#ctor*
  nameWithType.vb: LogEntry.New(Exception)
  fullName.vb: SocketMeister.LogEntry.New(System.Exception)
  name.vb: New(Exception)
- uid: SocketMeister.LogEntry.#ctor(System.Exception,System.Int64)
  commentId: M:SocketMeister.LogEntry.#ctor(System.Exception,System.Int64)
  id: '#ctor(System.Exception,System.Int64)'
  parent: SocketMeister.LogEntry
  langs:
  - csharp
  - vb
  name: LogEntry(Exception, long)
  nameWithType: LogEntry.LogEntry(Exception, long)
  fullName: SocketMeister.LogEntry.LogEntry(System.Exception, long)
  type: Constructor
  source:
    remote:
      path: src/SocketMeister/LogEntry.cs
      branch: main
      repo: https://github.com/SeanFellowes/SocketMeister
    id: .ctor
    path: src/SocketMeister/LogEntry.cs
    startLine: 32
  assemblies:
  - SocketMeister
  namespace: SocketMeister
  summary: Initializes a new instance of the <xref href="SocketMeister.LogEntry" data-throw-if-not-resolved="false"></xref> class for an exception with a specific message ID.
  example: []
  syntax:
    content: public LogEntry(Exception exception, long messageId)
    parameters:
    - id: exception
      type: System.Exception
      description: The exception associated with the log entry.
    - id: messageId
      type: System.Int64
      description: The SocketMeister message ID related to this log entry.
    content.vb: Public Sub New(exception As Exception, messageId As Long)
  overload: SocketMeister.LogEntry.#ctor*
  nameWithType.vb: LogEntry.New(Exception, Long)
  fullName.vb: SocketMeister.LogEntry.New(System.Exception, Long)
  name.vb: New(Exception, Long)
- uid: SocketMeister.LogEntry.#ctor(System.String,SocketMeister.Severity,SocketMeister.LogEventType)
  commentId: M:SocketMeister.LogEntry.#ctor(System.String,SocketMeister.Severity,SocketMeister.LogEventType)
  id: '#ctor(System.String,SocketMeister.Severity,SocketMeister.LogEventType)'
  parent: SocketMeister.LogEntry
  langs:
  - csharp
  - vb
  name: LogEntry(string, Severity, LogEventType)
  nameWithType: LogEntry.LogEntry(string, Severity, LogEventType)
  fullName: SocketMeister.LogEntry.LogEntry(string, SocketMeister.Severity, SocketMeister.LogEventType)
  type: Constructor
  source:
    remote:
      path: src/SocketMeister/LogEntry.cs
      branch: main
      repo: https://github.com/SeanFellowes/SocketMeister
    id: .ctor
    path: src/SocketMeister/LogEntry.cs
    startLine: 47
  assemblies:
  - SocketMeister
  namespace: SocketMeister
  summary: Initializes a new instance of the <xref href="SocketMeister.LogEntry" data-throw-if-not-resolved="false"></xref> class with a message, severity, and event type.
  example: []
  syntax:
    content: public LogEntry(string message, Severity severity, LogEventType eventType)
    parameters:
    - id: message
      type: System.String
      description: The message describing the log event.
    - id: severity
      type: SocketMeister.Severity
      description: The severity level of the log event.
    - id: eventType
      type: SocketMeister.LogEventType
      description: The category of the log event.
    content.vb: Public Sub New(message As String, severity As Severity, eventType As LogEventType)
  overload: SocketMeister.LogEntry.#ctor*
  nameWithType.vb: LogEntry.New(String, Severity, LogEventType)
  fullName.vb: SocketMeister.LogEntry.New(String, SocketMeister.Severity, SocketMeister.LogEventType)
  name.vb: New(String, Severity, LogEventType)
- uid: SocketMeister.LogEntry.#ctor(System.String,SocketMeister.Severity,SocketMeister.LogEventType,System.Int64)
  commentId: M:SocketMeister.LogEntry.#ctor(System.String,SocketMeister.Severity,SocketMeister.LogEventType,System.Int64)
  id: '#ctor(System.String,SocketMeister.Severity,SocketMeister.LogEventType,System.Int64)'
  parent: SocketMeister.LogEntry
  langs:
  - csharp
  - vb
  name: LogEntry(string, Severity, LogEventType, long)
  nameWithType: LogEntry.LogEntry(string, Severity, LogEventType, long)
  fullName: SocketMeister.LogEntry.LogEntry(string, SocketMeister.Severity, SocketMeister.LogEventType, long)
  type: Constructor
  source:
    remote:
      path: src/SocketMeister/LogEntry.cs
      branch: main
      repo: https://github.com/SeanFellowes/SocketMeister
    id: .ctor
    path: src/SocketMeister/LogEntry.cs
    startLine: 57
  assemblies:
  - SocketMeister
  namespace: SocketMeister
  summary: Initializes a new instance of the <xref href="SocketMeister.LogEntry" data-throw-if-not-resolved="false"></xref> class with a message, severity, event type, and message ID.
  example: []
  syntax:
    content: public LogEntry(string message, Severity severity, LogEventType eventType, long messageId)
    parameters:
    - id: message
      type: System.String
      description: The message describing the log event.
    - id: severity
      type: SocketMeister.Severity
      description: The severity level of the log event.
    - id: eventType
      type: SocketMeister.LogEventType
      description: The category of the log event.
    - id: messageId
      type: System.Int64
      description: The SocketMeister message ID related to this log entry.
    content.vb: Public Sub New(message As String, severity As Severity, eventType As LogEventType, messageId As Long)
  overload: SocketMeister.LogEntry.#ctor*
  nameWithType.vb: LogEntry.New(String, Severity, LogEventType, Long)
  fullName.vb: SocketMeister.LogEntry.New(String, SocketMeister.Severity, SocketMeister.LogEventType, Long)
  name.vb: New(String, Severity, LogEventType, Long)
- uid: SocketMeister.LogEntry.Exception
  commentId: P:SocketMeister.LogEntry.Exception
  id: Exception
  parent: SocketMeister.LogEntry
  langs:
  - csharp
  - vb
  name: Exception
  nameWithType: LogEntry.Exception
  fullName: SocketMeister.LogEntry.Exception
  type: Property
  source:
    remote:
      path: src/SocketMeister/LogEntry.cs
      branch: main
      repo: https://github.com/SeanFellowes/SocketMeister
    id: Exception
    path: src/SocketMeister/LogEntry.cs
    startLine: 68
  assemblies:
  - SocketMeister
  namespace: SocketMeister
  summary: Gets the exception associated with the log entry, if applicable.
  example: []
  syntax:
    content: public Exception Exception { get; }
    parameters: []
    return:
      type: System.Exception
    content.vb: Public ReadOnly Property Exception As Exception
  overload: SocketMeister.LogEntry.Exception*
- uid: SocketMeister.LogEntry.Timestamp
  commentId: P:SocketMeister.LogEntry.Timestamp
  id: Timestamp
  parent: SocketMeister.LogEntry
  langs:
  - csharp
  - vb
  name: Timestamp
  nameWithType: LogEntry.Timestamp
  fullName: SocketMeister.LogEntry.Timestamp
  type: Property
  source:
    remote:
      path: src/SocketMeister/LogEntry.cs
      branch: main
      repo: https://github.com/SeanFellowes/SocketMeister
    id: Timestamp
    path: src/SocketMeister/LogEntry.cs
    startLine: 73
  assemblies:
  - SocketMeister
  namespace: SocketMeister
  summary: Gets the timestamp of the log entry.
  example: []
  syntax:
    content: public DateTime Timestamp { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public ReadOnly Property Timestamp As Date
  overload: SocketMeister.LogEntry.Timestamp*
- uid: SocketMeister.LogEntry.Message
  commentId: P:SocketMeister.LogEntry.Message
  id: Message
  parent: SocketMeister.LogEntry
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: LogEntry.Message
  fullName: SocketMeister.LogEntry.Message
  type: Property
  source:
    remote:
      path: src/SocketMeister/LogEntry.cs
      branch: main
      repo: https://github.com/SeanFellowes/SocketMeister
    id: Message
    path: src/SocketMeister/LogEntry.cs
    startLine: 78
  assemblies:
  - SocketMeister
  namespace: SocketMeister
  summary: Gets the message describing the log event.
  example: []
  syntax:
    content: public string Message { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Message As String
  overload: SocketMeister.LogEntry.Message*
- uid: SocketMeister.LogEntry.Severity
  commentId: P:SocketMeister.LogEntry.Severity
  id: Severity
  parent: SocketMeister.LogEntry
  langs:
  - csharp
  - vb
  name: Severity
  nameWithType: LogEntry.Severity
  fullName: SocketMeister.LogEntry.Severity
  type: Property
  source:
    remote:
      path: src/SocketMeister/LogEntry.cs
      branch: main
      repo: https://github.com/SeanFellowes/SocketMeister
    id: Severity
    path: src/SocketMeister/LogEntry.cs
    startLine: 83
  assemblies:
  - SocketMeister
  namespace: SocketMeister
  summary: Gets the severity level of the log event.
  example: []
  syntax:
    content: public Severity Severity { get; }
    parameters: []
    return:
      type: SocketMeister.Severity
    content.vb: Public ReadOnly Property Severity As Severity
  overload: SocketMeister.LogEntry.Severity*
- uid: SocketMeister.LogEntry.EventType
  commentId: P:SocketMeister.LogEntry.EventType
  id: EventType
  parent: SocketMeister.LogEntry
  langs:
  - csharp
  - vb
  name: EventType
  nameWithType: LogEntry.EventType
  fullName: SocketMeister.LogEntry.EventType
  type: Property
  source:
    remote:
      path: src/SocketMeister/LogEntry.cs
      branch: main
      repo: https://github.com/SeanFellowes/SocketMeister
    id: EventType
    path: src/SocketMeister/LogEntry.cs
    startLine: 88
  assemblies:
  - SocketMeister
  namespace: SocketMeister
  summary: Gets the category of the log event.
  example: []
  syntax:
    content: public LogEventType EventType { get; }
    parameters: []
    return:
      type: SocketMeister.LogEventType
    content.vb: Public ReadOnly Property EventType As LogEventType
  overload: SocketMeister.LogEntry.EventType*
- uid: SocketMeister.LogEntry.MessageId
  commentId: P:SocketMeister.LogEntry.MessageId
  id: MessageId
  parent: SocketMeister.LogEntry
  langs:
  - csharp
  - vb
  name: MessageId
  nameWithType: LogEntry.MessageId
  fullName: SocketMeister.LogEntry.MessageId
  type: Property
  source:
    remote:
      path: src/SocketMeister/LogEntry.cs
      branch: main
      repo: https://github.com/SeanFellowes/SocketMeister
    id: MessageId
    path: src/SocketMeister/LogEntry.cs
    startLine: 93
  assemblies:
  - SocketMeister
  namespace: SocketMeister
  summary: Gets the SocketMeister message ID related to this log entry, if applicable.
  example: []
  syntax:
    content: public long MessageId { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property MessageId As Long
  overload: SocketMeister.LogEntry.MessageId*
references:
- uid: SocketMeister
  commentId: N:SocketMeister
  href: SocketMeister.html
  name: SocketMeister
  nameWithType: SocketMeister
  fullName: SocketMeister
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SocketMeister.LogEntry
  commentId: T:SocketMeister.LogEntry
  parent: SocketMeister
  href: SocketMeister.LogEntry.html
  name: LogEntry
  nameWithType: LogEntry
  fullName: SocketMeister.LogEntry
- uid: SocketMeister.LogEntry.#ctor*
  commentId: Overload:SocketMeister.LogEntry.#ctor
  href: SocketMeister.LogEntry.html#SocketMeister_LogEntry__ctor_System_Exception_
  name: LogEntry
  nameWithType: LogEntry.LogEntry
  fullName: SocketMeister.LogEntry.LogEntry
  nameWithType.vb: LogEntry.New
  fullName.vb: SocketMeister.LogEntry.New
  name.vb: New
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SocketMeister.Severity
  commentId: T:SocketMeister.Severity
  parent: SocketMeister
  href: SocketMeister.Severity.html
  name: Severity
  nameWithType: Severity
  fullName: SocketMeister.Severity
- uid: SocketMeister.LogEventType
  commentId: T:SocketMeister.LogEventType
  parent: SocketMeister
  href: SocketMeister.LogEventType.html
  name: LogEventType
  nameWithType: LogEventType
  fullName: SocketMeister.LogEventType
- uid: SocketMeister.LogEntry.Exception*
  commentId: Overload:SocketMeister.LogEntry.Exception
  href: SocketMeister.LogEntry.html#SocketMeister_LogEntry_Exception
  name: Exception
  nameWithType: LogEntry.Exception
  fullName: SocketMeister.LogEntry.Exception
- uid: SocketMeister.LogEntry.Timestamp*
  commentId: Overload:SocketMeister.LogEntry.Timestamp
  href: SocketMeister.LogEntry.html#SocketMeister_LogEntry_Timestamp
  name: Timestamp
  nameWithType: LogEntry.Timestamp
  fullName: SocketMeister.LogEntry.Timestamp
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: SocketMeister.LogEntry.Message*
  commentId: Overload:SocketMeister.LogEntry.Message
  href: SocketMeister.LogEntry.html#SocketMeister_LogEntry_Message
  name: Message
  nameWithType: LogEntry.Message
  fullName: SocketMeister.LogEntry.Message
- uid: SocketMeister.LogEntry.Severity*
  commentId: Overload:SocketMeister.LogEntry.Severity
  href: SocketMeister.LogEntry.html#SocketMeister_LogEntry_Severity
  name: Severity
  nameWithType: LogEntry.Severity
  fullName: SocketMeister.LogEntry.Severity
- uid: SocketMeister.LogEntry.EventType*
  commentId: Overload:SocketMeister.LogEntry.EventType
  href: SocketMeister.LogEntry.html#SocketMeister_LogEntry_EventType
  name: EventType
  nameWithType: LogEntry.EventType
  fullName: SocketMeister.LogEntry.EventType
- uid: SocketMeister.LogEntry.MessageId*
  commentId: Overload:SocketMeister.LogEntry.MessageId
  href: SocketMeister.LogEntry.html#SocketMeister_LogEntry_MessageId
  name: MessageId
  nameWithType: LogEntry.MessageId
  fullName: SocketMeister.LogEntry.MessageId
